<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<context:property-placeholder location="classpath*:jdbc.properties" ignore-unresolvable="true" />
	
	<bean id="imgsrv.dbcp" destroy-method="close" abstract="true">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>

        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />

        <property name="removeAbandoned" value="${jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>

        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />

        <property name="filters" value="stat" />
	</bean>

	<bean id="imgsrv.read" parent="imgsrv.dbcp" class="com.alibaba.druid.pool.DruidDataSource">
		<property value="${imgsrv.read.url}" name="url" />
		<property value="${imgsrv.read.username}" name="username" />
		<property value="${imgsrv.read.password}" name="password" />
	</bean>
	<bean id="imgsrv.write" parent="imgsrv.dbcp" class="com.alibaba.druid.pool.DruidDataSource">
		<property value="${imgsrv.write.url}" name="url" />
		<property value="${imgsrv.write.username}" name="username" />
		<property value="${imgsrv.write.password}" name="password" />
	</bean>
	<bean id="imgsrv.sqlSessionFactoryBean.R" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="imgsrv.read" />
		<property name="configLocation" value="classpath:META-INF/mybatis/mybatis-config.xml"/>
		<property name="mapperLocations">
			<array>
				<value>classpath*:mapping/read/*Mapper.xml</value>
			</array>
		</property>
	</bean>
	<bean id="imgsrv.sqlSessionFactoryBean.W" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="imgsrv.write" />
		<property name="configLocation" value="classpath:META-INF/mybatis/mybatis-config.xml"/>
		<property name="mapperLocations">
			<array>
				<value>classpath*:mapping/write/*Mapper.xml</value>
			</array>
		</property>
	</bean>
	<bean id="imgsrv.mapperScannerConfigurer.R" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pzj.core.imgsrv.dao.read"/>
		<property name="sqlSessionFactoryBeanName" value="imgsrv.sqlSessionFactoryBean.R"/>
	</bean>
	<bean id="imgsrv.mapperScannerConfigurer.W" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pzj.core.imgsrv.dao.write"/>
		<property name="sqlSessionFactoryBeanName" value="imgsrv.sqlSessionFactoryBean.W"/>
	</bean>
</beans>